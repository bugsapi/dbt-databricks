[tox]
skipsdist = True
envlist = linter, unit

[testenv:linter]
basepython = python3
commands =
  {envpython} -m ruff format --check
  {envpython} -m ruff check
  {envpython} -m mypy --config-file mypy.ini --explicit-package-bases dbt tests
passenv =
  DBT_*
  PYTEST_ADDOPTS
deps =
  -r{toxinidir}/dev-requirements.txt
  -r{toxinidir}/requirements.txt

[testenv:format]
basepython = python3
commands = {envpython} -m ruff format
passenv =
  DBT_*
  PYTEST_ADDOPTS
deps =
  -r{toxinidir}/dev-requirements.txt

[testenv:unit]
basepython = python3
commands = {envpython} -m pytest --color=yes -v {posargs} tests/unit
passenv =
  DBT_*
  PYTEST_ADDOPTS
deps =
  -r{toxinidir}/dev-requirements.txt
  -r{toxinidir}/requirements.txt

[testenv:integration-databricks-cluster]
basepython = python3
commands =
  /bin/bash -c '{envpython} -m pytest -v --profile databricks_cluster -n 10 tests/functional/adapter/* {posargs}; ret=$?; [ $ret = 5 ] && exit 0 || exit $ret'
passenv =
  DBT_*
  PYTEST_ADDOPTS
deps =
  -r{toxinidir}/dev-requirements.txt
  -r{toxinidir}/requirements.txt
allowlist_externals = /bin/bash

[testenv:integration-databricks-uc-cluster]
basepython = python3
commands =
  /bin/bash -c '{envpython} -m pytest -v --profile databricks_uc_cluster -n 10 tests/functional/adapter/* {posargs}; ret=$?; [ $ret = 5 ] && exit 0 || exit $ret'
passenv =
  DBT_*
  PYTEST_ADDOPTS
deps =
  -r{toxinidir}/dev-requirements.txt
  -r{toxinidir}/requirements.txt
allowlist_externals = /bin/bash

[testenv:integration-databricks-uc-sql-endpoint]
basepython = python3
commands =
  /bin/bash -c '{envpython} -m pytest -v --profile databricks_uc_sql_endpoint -n 10 --dist loadscope tests/functional/adapter/* {posargs}; ret=$?; [ $ret = 5 ] && exit 0 || exit $ret'
passenv =
  DBT_*
  PYTEST_ADDOPTS
deps =
  -r{toxinidir}/dev-requirements.txt
  -r{toxinidir}/requirements.txt
allowlist_externals = /bin/bash
